##
# CA build script
##

SConscript('./resource/csdk/connectivity/build/SConscript')

Import('env')

target_os = env.get('TARGET_OS')
transport = env.get('TARGET_TRANSPORT')
buildsample = env.get('BUILD_SAMPLE')
release_mode = env.get('RELEASE')
secured = env.get('SECURED')
logging = env.get('LOGGING')
routing = env.get('ROUTING')

env.PrependUnique(CPPPATH = [
		'../../../../logger/include',
		'../../../../stack/include',
		'../../../../../../extlibs/cjson',
		'../../../../../oc_logger/include',
		'../../../../../connectivity/lib/libcoap-4.1.1'
		])

env.AppendUnique(CPPDEFINES = ['TB_LOG'])
if routing == 'GW':
	env.AppendUnique(CPPDEFINES = ['ROUTING_GATEWAY'])
elif routing == 'EP':
	env.AppendUnique(CPPDEFINES = ['ROUTING_EP'])
env.AppendUnique(CPPDEFINES = ['__TIZEN__'])

print "Given Transport is %s" % transport
print "Given OS is %s" % target_os

if target_os == 'tizen':
	command = "sh resource/csdk/stack/samples/tizen/build/gbsbuild.sh %s %s %s %s %s %s" % (transport, secured, buildsample, release_mode, logging, routing)
	print "Created Command is %s" % command
	gbs_script = env.Command('gbs_build', None, command)
	AlwaysBuild ('gbs_script')